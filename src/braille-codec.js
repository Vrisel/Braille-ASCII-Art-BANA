class BrailleCodec {
  static #banaDict = {
    ' ': '⠀',
    A: '⠁',
    1: '⠂',
    B: '⠃',
    "'": '⠄',
    K: '⠅',
    2: '⠆',
    L: '⠇',
    '@': '⠈',
    C: '⠉',
    I: '⠊',
    F: '⠋',
    '/': '⠌',
    M: '⠍',
    S: '⠎',
    P: '⠏',
    '"': '⠐',
    E: '⠑',
    3: '⠒',
    H: '⠓',
    9: '⠔',
    O: '⠕',
    6: '⠖',
    R: '⠗',
    '^': '⠘',
    D: '⠙',
    J: '⠚',
    G: '⠛',
    '>': '⠜',
    N: '⠝',
    T: '⠞',
    Q: '⠟',
    ',': '⠠',
    '*': '⠡',
    5: '⠢',
    '<': '⠣',
    '-': '⠤',
    U: '⠥',
    8: '⠦',
    V: '⠧',
    '.': '⠨',
    '%': '⠩',
    '[': '⠪',
    $: '⠫',
    '+': '⠬',
    X: '⠭',
    '!': '⠮',
    '&': '⠯',
    ';': '⠰',
    ':': '⠱',
    4: '⠲',
    '\\': '⠳',
    0: '⠴',
    Z: '⠵',
    7: '⠶',
    '(': '⠷',
    _: '⠸',
    '?': '⠹',
    W: '⠺',
    ']': '⠻',
    '#': '⠼',
    Y: '⠽',
    ')': '⠾',
    '=': '⠿',
  };

  static #banaSynonyms = {
    '`': '@',
    '~': '^',
    '{': '[',
    '}': ']',
    '|': '\\',

    '“': '"',
    '”': '"',
    '‘': "'",
    '’': "'",
  };

  static #unicodeDict = {
    '\u2800': '&nbsp;',
    '\u2801': 'a',
    '\u2802': '1',
    '\u2803': 'b',
    '\u2804': '$apos;',
    '\u2805': 'k',
    '\u2806': '2',
    '\u2807': 'l',
    '\u2808': '@',
    '\u2809': 'c',
    '\u280a': 'i',
    '\u280b': 'f',
    '\u280c': '/',
    '\u280d': 'm',
    '\u280e': 's',
    '\u280f': 'p',

    '\u2810': '&quot;',
    '\u2811': 'e',
    '\u2812': '3',
    '\u2813': 'h',
    '\u2814': '9',
    '\u2815': 'o',
    '\u2816': '6',
    '\u2817': 'r',
    '\u2818': '^',
    '\u2819': 'd',
    '\u281a': 'j',
    '\u281b': 'g',
    '\u281c': '&lt;',
    '\u281d': 'n',
    '\u281e': 't',
    '\u281f': 'q',

    '\u2820': ',',
    '\u2821': '*',
    '\u2822': '5',
    '\u2823': '&gt;',
    '\u2824': '-',
    '\u2825': 'u',
    '\u2826': '8',
    '\u2827': 'v',
    '\u2828': '.',
    '\u2829': '%',
    '\u282a': '[',
    '\u282b': '$',
    '\u282c': '+',
    '\u282d': 'x',
    '\u282e': '!',
    '\u282f': '&amp;',

    '\u2830': ';',
    '\u2831': ':',
    '\u2832': '4',
    '\u2833': '\\',
    '\u2834': '0',
    '\u2835': 'z',
    '\u2836': '7',
    '\u2837': '(',
    '\u2838': '_',
    '\u2839': '?',
    '\u283a': 'w',
    '\u283b': ']',
    '\u283c': '#',
    '\u283d': 'y',
    '\u283e': ')',
    '\u283f': '=',
  };

  static banaToUnicode(str) {
    let result = '';

    for (let c of str) {
      c = c in banaSynonyms ? this.#banaSynonyms[c] : c.toUpperCase();

      if (c in banaDict) result += this.#banaDict[c];
      else throw new RangeError(`유효하지 않은 바나코드입니다: ${c}`);
    }

    return result;
  }

  static unicodeToBana(str) {
    let result = '';

    for (let c of str) {
      if (c == ' ' || ('\u2800' <= c && c <= '\u283F'))
        result += this.#unicodeDict[c];
      else
        throw new RangeError(
          `바나코드로 변환할 수 있는 점형 유니코드가 아닙니다: ${c}`
        );
    }

    return result;
  }
}

export { BrailleCodec as default };
